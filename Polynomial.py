import random

""" Аналитическое значение T = O(n²)
Потому что алгоритм делает вложенные циклы: для каждого элемента массива
он сравнивает его со всеми остальными. 
Количество операций растёт пропорционально квадрату размера входных данных.
"""

"""Эксперементальные значения:
Случайный массив: [12, 14, 8, 31, 11, 45, 17]
Отсортированный массив: [8, 11, 12, 14, 17, 31, 45]
Количество операций T = 71 

Не отсортированый массив: [41, 5, 37, 2, 45, 1]
Отсортированный массив: [1, 2, 5, 37, 41, 45]
Количество операций T = 63 

Массив отсортированный в обратную сторону: [45, 41, 37, 5, 2, 1]
Отсортированный массив: [1, 2, 5, 37, 41, 45]
Количество операций T = 73 

Массив отсортированный наполовину: [1, 2, 5, 41, 37, 45]
Отсортированный массив: [1, 2, 5, 37, 41, 45]
Количество операций T = 45 

Отсортированный массив: [1, 2, 5, 37, 41, 45]
Отсортированный массив: [1, 2, 5, 37, 41, 45]
Количество операций T = 43 
"""

def bubble_sort(arr):

    n = len(arr)
    T = 0  

    for i in range(n):
        T += 1  
        for j in range(0, n - i - 1):
            T += 1  
            if arr[j] > arr[j + 1]:
                T += 1
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
                T += 1  
            T += 1  
        T += 1  
    T += 1  
    return arr, T


n = random.randint(5, 8)  # размер массива
arr = random.sample(range(1, 50), n)

print("Случайный массив:", arr)

result, T = bubble_sort(arr[:])  # сортируем копию
print("Отсортированный массив:", result)
print("Количество операций T =", T, '\n')

arr_not_sorted = [41, 5, 37, 2, 45, 1]
print("Не отсортированый массив:", arr_not_sorted)

result, T = bubble_sort(arr_not_sorted)
print("Отсортированный массив:", result)
print("Количество операций T =", T, '\n')

arr_sorted_back = [45, 41, 37, 5, 2, 1]
print("Массив отсортированный в обратную сторону:", arr_sorted_back)

result, T = bubble_sort(arr_sorted_back)
print("Отсортированный массив:", result)
print("Количество операций T =", T, '\n')

arr_sorted_in_half = [1, 2, 5, 41, 37, 45]
print("Массив отсортированный наполовину:", arr_sorted_in_half)

result, T = bubble_sort(arr_sorted_in_half)
print("Отсортированный массив:", result)
print("Количество операций T =", T, '\n')


arr_sorted = [1, 2, 5, 37, 41, 45]
print("Отсортированный массив:", arr_sorted)

result, T = bubble_sort(arr_sorted)
print("Отсортированный массив:", result)
print("Количество операций T =", T, '\n')